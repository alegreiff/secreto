import { Button } from "@chakra-ui/react";
import {
  getUser,
  supabaseServerClient,
  supabaseClient,
} from "@supabase/auth-helpers-nextjs";
import { format } from "date-fns";
import { es } from "date-fns/locale";

//import { useUser } from "@supabase/auth-helpers-react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect } from "react";
import Plantilla from "../components/layout/MainLayout";
import useFase from "../hooks/useFase";
import useDatosVivos from "../store/datosFlash";
import useDatosPolla from "../store/datospolla";
import styles from "../styles/Home.module.css";

export default function Home({ user, db_partidos }) {
  const partidos = useDatosPolla((state) => state.partidos);
  const setPartidos = useDatosPolla((state) => state.setPartidos);

  const { fechas, fase, setFase } = useDatosVivos((state) => state);
  const tempo = useFase(fechas);
  /* const HOYDIA = format(new Date(fechas.HOY), "cccc MMM dd H':'mm a", {
    locale: es,
  }); */
  const HOYDIA = fechas.HOY;

  useEffect(() => {
    async function cargaPartidos() {
      //console.log("Cargando matche's");
      const { data: db_partidos } = await supabaseClient
        .from("partidospower")
        .select("*");

      setPartidos(db_partidos);
    }

    if (partidos.length === 0) {
      cargaPartidos();
    }
  }, []);

  const clearLocalStorage = () => {
    localStorage.clear();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Plantilla>
        <Button onClick={clearLocalStorage}> Limpia storage </Button>
        <main className={styles.main}>
          <h1 className={styles.title}>
            ETAPA
            <a href="#">
              {tempo[0]} - {tempo[1]} - {tempo[2] ? "ABIERTO" : "CERRADO"}
            </a>
          </h1>
          <Link href="/login">Login</Link>-<Link href="/profile">Perfil</Link>
          <p className={styles.description}>
            Get started by editing{" "}
            <code className={styles.code}>pages/index.js</code>
          </p>
          {user && user?.email}
        </main>
      </Plantilla>
    </>
  );
}

export async function getServerSideProps(ctx) {
  const { user } = await getUser(ctx);

  return { props: { user } };
}
